spring.application.name=api-gateway

# Habilitar el DiscoveryClientRouteDefinitionLocator
spring.cloud.gateway.discovery.locator.enabled=true

# Configuración de Eureka
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# Deshabilitar Ribbon (si no estás usando LoadBalancer)
# NOTA: Esta propiedad podría no ser necesaria
#spring.cloud.loadbalancer.ribbon.enabled=false

# Rutas para Spring Cloud Gateway MVC
spring.cloud.gateway.routes[0].id=PRODUCT-MICROSERVICE
spring.cloud.gateway.routes[0].uri=lb://PRODUCT-MICROSERVICE
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/products/**, /api/categories/**


spring.cloud.gateway.routes[1].id=booking-microservice
spring.cloud.gateway.routes[1].uri=lb://BOOKING-MICROSERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/booking/**

spring.cloud.gateway.routes[2].id=stock-microservice  # Nuevo ID para stock-microservice
spring.cloud.gateway.routes[2].uri=lb://STOCK-MICROSERVICE # lb:// para balanceo de carga
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/stock/** # Rutas que se enrutarán

spring.cloud.gateway.default-filters=TokenRelay

#configuracionde keycloak
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:9090/realms/mycompany-microservices-realm
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-id=spring-cloud-gateway-client
spring.security.oauth2.client.registration.spring-cloud-gateway-client.client-secret=DTkBioSx882yA75hyJqOSRGfN5LXupUP
spring.security.oauth2.client.registration.spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.spring-cloud-gateway-client.redirect-uri=http://localhost:8080/login/oauth2/code/spring-cloud-gateway-client

spring.security.oauth2.client.registration.spring-cloud-gateway-client.scope=openid